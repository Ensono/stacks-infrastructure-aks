variables:
  - name: region
    value: {{ .Input.Cloud.Region }}
  - name: company
    value: {{ .Input.Business.Company }}
  - name: project
    value: {{ .Project.Name }}
  - name: domain
    value: {{ .Input.Business.Domain }}
  - name: self_repo
    value: {{ .Project.Name }}

  # Terraform Configuration

  # State configuration

  # Stacks operates Terraform states based on workspaces **IT IS VERY IMPORTANT** that you ensure a unique name for each application definition
  # Furthermore **IT IS VERY IMPORTANT** that you change the name of a workspace for each deployment stage
  # there are some best practices around this if you are going for feature based environments
  # avoid running anything past dev that is not on master
  - name: tf_state_rg
    value: {{ .Input.Terraform.Backend.Group }}
  - name: tf_state_storage
    value: {{ .Input.Terraform.Backend.Storage }}
  - name: tf_state_container
    value: {{ .Input.Terraform.Backend.Container }}
  - name: tf_state_key
    value: $(self-generic-name)

  # Domain names
  - name: base_domain_nonprod
    value: nonprod.{{ .Input.Network.Base.Domain.External }}
  - name: base_domain_internal_nonprod
    value: nonprod.{{ .Input.Network.Base.Domain.Internal }}
  - name: base_domain_prod
    value: prod.{{ .Input.Network.Base.Domain.External }}
  - name: base_domain_internal_prod
    value: prod.{{ .Input.Network.Base.Domain.Internal }}

  # DNS configuration
  - name: dns_zone_resource_group
    value:
  - name: create_dns_zone
    value: false

  # GitHub infomration
  - name: create_release
    value: false
  - name: github_release_service_connection
    value: 
  - name: github_org
    value: $(company)

